[
    {
        "step": 1,
        "current_state": {
            "literals": [
                "on(a:block,b:block)",
                "handempty(robot:robot)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)",
                "clear(a:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "unstack(a:block, b:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "a",
            "?robot": "robot",
            "?y": "b"
        },
        "lifted_preconds": "[unstack(?x:block), on(?x:block,?y:block), clear(?x:block), handempty(?robot:robot)]",
        "next_state": {
            "literals": [
                "clear(b:block)",
                "on(c:block,d:block)",
                "handfull(robot:robot)",
                "ontable(e:block)",
                "holding(a:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 2,
        "current_state": {
            "literals": [
                "clear(b:block)",
                "on(c:block,d:block)",
                "handfull(robot:robot)",
                "ontable(e:block)",
                "holding(a:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "stack(a:block, b:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "a",
            "?y": "b",
            "?robot": "robot"
        },
        "lifted_preconds": "[stack(?x:block,?y:block), holding(?x:block), clear(?y:block), handfull(?robot:robot)]",
        "next_state": {
            "literals": [
                "on(a:block,b:block)",
                "on(d:block,e:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(b:block,c:block)",
                "handempty(robot:robot)",
                "clear(a:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 3,
        "current_state": {
            "literals": [
                "on(a:block,b:block)",
                "on(d:block,e:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(b:block,c:block)",
                "handempty(robot:robot)",
                "clear(a:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "unstack(a:block, b:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "a",
            "?robot": "robot",
            "?y": "b"
        },
        "lifted_preconds": "[unstack(?x:block), on(?x:block,?y:block), clear(?x:block), handempty(?robot:robot)]",
        "next_state": {
            "literals": [
                "clear(b:block)",
                "on(c:block,d:block)",
                "handfull(robot:robot)",
                "ontable(e:block)",
                "holding(a:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 4,
        "current_state": {
            "literals": [
                "clear(b:block)",
                "on(c:block,d:block)",
                "handfull(robot:robot)",
                "ontable(e:block)",
                "holding(a:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "put-down(a:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "a",
            "?robot": "robot"
        },
        "lifted_preconds": "[putdown(?x:block), holding(?x:block), handfull(?robot:robot)]",
        "next_state": {
            "literals": [
                "ontable(a:block)",
                "handempty(robot:robot)",
                "clear(a:block)",
                "clear(b:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 5,
        "current_state": {
            "literals": [
                "ontable(a:block)",
                "handempty(robot:robot)",
                "clear(a:block)",
                "clear(b:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "unstack(b:block, c:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "b",
            "?robot": "robot",
            "?y": "c"
        },
        "lifted_preconds": "[unstack(?x:block), on(?x:block,?y:block), clear(?x:block), handempty(?robot:robot)]",
        "next_state": {
            "literals": [
                "ontable(a:block)",
                "on(d:block,e:block)",
                "handfull(robot:robot)",
                "holding(b:block)",
                "clear(c:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "clear(a:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 6,
        "current_state": {
            "literals": [
                "ontable(a:block)",
                "on(d:block,e:block)",
                "handfull(robot:robot)",
                "holding(b:block)",
                "clear(c:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "clear(a:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "stack(b:block, c:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "b",
            "?y": "c",
            "?robot": "robot"
        },
        "lifted_preconds": "[stack(?x:block,?y:block), holding(?x:block), clear(?y:block), handfull(?robot:robot)]",
        "next_state": {
            "literals": [
                "ontable(a:block)",
                "handempty(robot:robot)",
                "clear(a:block)",
                "clear(b:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 7,
        "current_state": {
            "literals": [
                "ontable(a:block)",
                "handempty(robot:robot)",
                "clear(a:block)",
                "clear(b:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(b:block,c:block)",
                "on(d:block,e:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "unstack(b:block, c:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "b",
            "?robot": "robot",
            "?y": "c"
        },
        "lifted_preconds": "[unstack(?x:block), on(?x:block,?y:block), clear(?x:block), handempty(?robot:robot)]",
        "next_state": {
            "literals": [
                "ontable(a:block)",
                "on(d:block,e:block)",
                "handfull(robot:robot)",
                "holding(b:block)",
                "clear(c:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "clear(a:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 8,
        "current_state": {
            "literals": [
                "ontable(a:block)",
                "on(d:block,e:block)",
                "handfull(robot:robot)",
                "holding(b:block)",
                "clear(c:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "clear(a:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "put-down(b:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "b",
            "?robot": "robot"
        },
        "lifted_preconds": "[putdown(?x:block), holding(?x:block), handfull(?robot:robot)]",
        "next_state": {
            "literals": [
                "ontable(a:block)",
                "handempty(robot:robot)",
                "clear(a:block)",
                "clear(b:block)",
                "clear(c:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(d:block,e:block)",
                "ontable(b:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 9,
        "current_state": {
            "literals": [
                "ontable(a:block)",
                "handempty(robot:robot)",
                "clear(a:block)",
                "clear(b:block)",
                "clear(c:block)",
                "on(c:block,d:block)",
                "ontable(e:block)",
                "on(d:block,e:block)",
                "ontable(b:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "unstack(c:block, d:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "c",
            "?robot": "robot",
            "?y": "d"
        },
        "lifted_preconds": "[unstack(?x:block), on(?x:block,?y:block), clear(?x:block), handempty(?robot:robot)]",
        "next_state": {
            "literals": [
                "ontable(a:block)",
                "on(d:block,e:block)",
                "handfull(robot:robot)",
                "clear(b:block)",
                "holding(c:block)",
                "ontable(e:block)",
                "clear(d:block)",
                "clear(a:block)",
                "ontable(b:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    },
    {
        "step": 10,
        "current_state": {
            "literals": [
                "ontable(a:block)",
                "on(d:block,e:block)",
                "handfull(robot:robot)",
                "clear(b:block)",
                "holding(c:block)",
                "ontable(e:block)",
                "clear(d:block)",
                "clear(a:block)",
                "ontable(b:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        },
        "ground_action": "stack(c:block, a:block, robot:robot)",
        "operator_object_assignment": {
            "?x": "c",
            "?y": "a",
            "?robot": "robot"
        },
        "lifted_preconds": "[stack(?x:block,?y:block), holding(?x:block), clear(?y:block), handfull(?robot:robot)]",
        "next_state": {
            "literals": [
                "ontable(a:block)",
                "on(c:block,a:block)",
                "handempty(robot:robot)",
                "clear(b:block)",
                "clear(c:block)",
                "ontable(e:block)",
                "clear(d:block)",
                "on(d:block,e:block)",
                "ontable(b:block)"
            ],
            "objects": [
                "b:block",
                "e:block",
                "d:block",
                "a:block",
                "robot:robot",
                "c:block"
            ],
            "goal": [
                "on(e:block,d:block)",
                "on(d:block,c:block)",
                "on(c:block,b:block)",
                "on(b:block,a:block)"
            ]
        }
    }
]